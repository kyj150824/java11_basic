package org.kh.site;
// 대입 연산자 : 연산 후에 대입하는 연산자 +=, -=, *=, /=, %=, &=, |=, >>=, <<=, >>>=, ^=
// 비트 연산자 : & (and), | (or), ~ (not), ^ (xor), >> (>>), << 
public class Operation7 {

	public static void main(String[] args) {
		int a = 20;
		int b = 15;
		int tmp;
		a += b;  // a = 35, b = 15 
		b -= a; // a = 35, b = -20
		System.out.println(" a = " + a  );
		System.out.println(" b = " + b  );
		
		// a와 b를 맞교환하는 경우 ( tmp ) tmp = 임시 기억 장소.
		tmp = a;
		a = b;
		b = tmp;
		System.out.println(" ******* 교환 후 ******* ");
		System.out.println(" a = " + a  );
		System.out.println(" b = " + b  );
		
		//비트 (2진수) 연산
		int x = 0b01101;
		int y = 0b01011;
		System.out.println(" x = " + Integer.toBinaryString(x));
		System.out.println(" y = " + Integer.toBinaryString(y));
		System.out.println(" x & y = " + Integer.toBinaryString(x & y)); // and
		System.out.println(" x | y = " + Integer.toBinaryString(x | y)); // or
		System.out.println(" x ^ y = " + Integer.toBinaryString(x ^ y)); // xor - 서로 입력이 다를 때 1 이 나옴.
		System.out.println(" ~ x " + Integer.toBinaryString(~x)); // not 
		System.out.println(" x >> 2 : " + Integer.toBinaryString(x >> 2)); // right shift
		System.out.println(" x << 2 : " + Integer.toBinaryString(x << 2)); // left shift
		System.out.println( " ************** 대입연산자 **************** " );
		
	}

}
